<!-----

Yay, no errors, warnings, or alerts!

Conversion time: 0.406 seconds.


Using this Markdown file:

1. Paste this output into your source file.
2. See the notes and action items below regarding this conversion run.
3. Check the rendered output (headings, lists, code blocks, tables) for proper
   formatting and use a linkchecker before you publish this page.

Conversion notes:

* Docs to Markdown version 1.0β33
* Tue Nov 29 2022 19:22:34 GMT-0800 (PST)
* Source doc: Sprint Review Meeting 11/26
* Tables are currently converted to HTML tables.
----->


# Meeting Minutes

## Meeting Information

**Meeting Date/Time:** 11/26/22, 10:00AM

**Meeting Location:** Zoom

**Note Taker:** Everyone

**Objective Statement:** Agile Sprint Review and Retrospective 2


<table>
  <tr>
   <td>Name
   </td>
   <td>What you accomplished during sprint 2
   </td>
  </tr>
  <tr>
   <td>Chi Zhang
   </td>
   <td>
<ul>

<li>Setup the pipeline for JSDOC 
<ul>
 
<li>It will be triggered on any push to main or pull request to main
 
<li>Using GitHub Action to build website for docs
</li> 
</ul>

<li>Setup the pipeline for testing  
<ul>
 
<li>It will be triggered on any push or pull request since we want to avoid buggy code in the development process.
</li> 
</ul>
</li> 
</ul>
   </td>
  </tr>
  <tr>
   <td>Andrew Man
   </td>
   <td>
<ul>

<li>Finished pause, play button, especially guaranteeing the music resumes from correct place in pause

<li>Finished prev., next button  especially ensuring that it works with every combination of pause/play and each other

<li>Finished shuffle button so that it remembers randomized previous song history

<li>Finished progress bar, including both fill and timestamps working for every song 
</li>
</ul>
   </td>
  </tr>
  <tr>
   <td>Brian Dinh
   </td>
   <td>
<ul>

<li>Added some more functionality to ffplay(e.g. looping, adding a callback when the ffplay ends, etc.)

<li>Fixed some bugs in fsAPI(and also replaced fs with fsPromises)

<li>
</li>
</ul>
   </td>
  </tr>
  <tr>
   <td>Liam Golly
   </td>
   <td>
<ul>

<li>GridJS searching

<li>FFplay debugging

<li>Updated the method that playlists are created, stored, and returned

<li>Refactored code to ensure that all js files pass lint.
</li>
</ul>
   </td>
  </tr>
  <tr>
   <td>Alvin Mangaliman
   </td>
   <td>
<ul>

<li>GridJS multi-row selection functionality for song library.

<li>Dedicated button for adding selected songs to now playing song queue.

<li>Theme “mixmatch” color picker in settings section.

<li>Update/finalize settings page UI.

<li>Playlist manager UI to manage create, add/update, and delete functions of library playlists.
</li>
</ul>
   </td>
  </tr>
  <tr>
   <td>Noah Terminello
   </td>
   <td>
<ul>

<li>Create, read, remove watch directories

<li>Load and write settings from storage

<li>Dynamic styling for columns of settings

<li>Cards for home screen for album, artist, tags, and genre
</li>
</ul>
   </td>
  </tr>
  <tr>
   <td>Jeremy Lei
   </td>
   <td>
<ul>

<li>Set up testing environment to use playwright 
<ul>
 
<li>More organized, easily added to pipeline
</li> 
</ul>

<li>Added unit tests for most fsAPI functions

<li>Finding bugs in API calls, letting backend know
</li>
</ul>
   </td>
  </tr>
  <tr>
   <td>Xuying He
   </td>
   <td>
<ul>

<li>Fixed some bugs in fsAPI

<li>Wrote some unit tests 
<ul>
 
<li>playlistAPICall.js
</li> 
</ul>

<li>Tested most of the functions in fsAPI and ffmpeg

<li>Wrote some UI tests
</li>
</ul>
   </td>
  </tr>
  <tr>
   <td>Jiseung Yoo
   </td>
   <td>
<ul>

<li>Created websites 

<li>Automatic updates of JSdoc

<li>Fix problems of JsDoc

<li>Grouping members of JSDoc

<li>Write and post informations of functions for explanations
</li>
</ul>
   </td>
  </tr>
</table>

